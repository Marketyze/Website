{"version":3,"file":"commons-fbd0e0db8d2353a1112d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/camelcase/index.js","webpack://gatsby-starter-default/../src/image-utils.ts","webpack://gatsby-starter-default/../src/components/hooks.ts","webpack://gatsby-starter-default/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-default/../src/components/picture.tsx","webpack://gatsby-starter-default/../src/components/placeholder.tsx","webpack://gatsby-starter-default/../src/components/main-image.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-default/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-default/../src/components/static-image.server.tsx","webpack://gatsby-starter-default/../src/components/static-image.tsx","webpack://gatsby-starter-default/./src/components/globals/colors.js","webpack://gatsby-starter-default/./src/components/Navbar/navBarElements.js","webpack://gatsby-starter-default/./src/components/Navbar/dropdownItems.js","webpack://gatsby-starter-default/./src/components/Navbar/dropdownEvents.js","webpack://gatsby-starter-default/./src/components/Navbar/MobileSidebar.js","webpack://gatsby-starter-default/./src/components/Navbar/MobileSidebarData.js","webpack://gatsby-starter-default/./src/components/Navbar/navBarIndex.js","webpack://gatsby-starter-default/./src/components/Footer/footerElements.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconContext.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconBase.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","export const colors = {\n    primaryTeal: '#008CA0',\n    black: '#012327',\n    white: '#F8FCFF',\n    darkTeal: '#015A6D', \n    lightTeal: '#91D7DD', \n    grey: '#9AA3AF', \n}","import styled from 'styled-components'\nimport {Link} from \"gatsby\"\n\n//colors\nconst main_color = \"#008CA0\"\n\n//with styled components, we can pass in props (active classes)\nexport const Nav = styled.nav`\n    background: ${({active}) => active ? \"#F8FCFF\" : \"linear-gradient(to bottom, rgba(255,255,255,0.9), 0%, rgba(255,255,255,0) 100%)\"};\n    transition: ${({active}) => active ? \"0.3s all ease\" : \"0.4s all ease\"};\n    height: 60px;\n    display: flex; \n    justify-content: center; \n    position: sticky; \n    top: 0; \n    z-index: 999; \n    opacity: 0.97;\n\n\n    @media screen and (max-width: 960px) {\n        background: ${({click}) => (click ? \"#F8FCFF\" : `${({active}) => active ? \"#fcfcfc\" : \"linear-gradient(to bottom, rgba(255,255,255,0.9), 0%, rgba(255,255,255,0) 100%)\"};`)}; \n    }\n`\n\nexport const NavbarContainer = styled.div`\n    display: flex; \n    justify-content: space-between;\n    height: 60px;\n    width: 100%; \n    max-width: 1000px;\n`\n\nexport const NavLogo = styled(Link) `\n    color: ${main_color};\n    justify-self: flex-start;\n    cursor: pointer; \n    text-decoration: none;\n    font-size: 1.7rem;\n    font-weight: bold;\n    display: flex; \n    align-items: center; \n    padding-left: 3rem; \n    font-family: 'Lato', sans-serif;\n    font-weight: 700;\n`\n\n//drop down menu\nexport const NavMenu = styled.ul`\n    display: flex;\n    align-items: center;\n    list-style: none;\n    text-align: center; \n\n    @media screen and (max-width: 960px) {\n        display: flex; \n        flex-direction: column; \n        width: 100%;\n        height: 100vh;\n        position: absolute;\n        transition: all 0.2s ease;\n        top: 60px;\n        left: ${({click}) => (click ? \"0\" : \"-100%\")}; \n        opacity: 1; \n        background: #fcfcfc; \n    }\n`\nexport const NavLinks = styled(Link)`\n    color: ${main_color}; \n    display: flex; \n    align-items: center; \n    text-decoration: none;\n    padding: 0.5rem 1.5rem;\n    height: 100%;\n    @import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900&display=swap');   \n    font-family: 'Lato', sans-serif;\n    font-weight: 700; \n    font-size: 1rem;\n\n`\n\nexport const NavItem = styled.li`\n    height: 80px;\n\n    @media screen and (max-width: 960px) {\n        display: none;\n\n    }\n`\n\n//mobile styling \nexport const MobileIcon = styled.div`\n    display: none;\n\n\n    @media screen and (max-width: 960px) {\n        display: flex;\n        transition: all 0.8 ease; \n        position: absolute;\n        right: 0; \n        transform: translate(-100%, 50%);\n        font-size: 2rem; \n        cursor: pointer; \n    }\n`  ","export const EventItems = [\n    \n    {\n        title: 'PITCH IT',\n        path: '/subEvents/latestEvent',\n        cName: 'dropdown-link'\n    }, \n]","import React, {useState, useEffect} from 'react'\nimport { EventItems } from './dropdownItems'\nimport {Link} from \"gatsby\"\nimport './Dropdown.css'\nimport styled from 'styled-components'\n\nfunction EventsDropDown() {\n    //click functions for the mobile dropdown\n    const [click, setClick] = useState(false)\n    const handleClick = () => setClick(!click)\n\n    //scroll effect for the dropdown Navbar\n    const [scroll, setScroll] = useState(false)\n\n    // function to apply the dropdown Navbar change effect\n    const changeNav = () => {\n        if (window.scrollY >= 80) {\n            setScroll(true)\n        } else {\n            setScroll(false)\n        }\n    }\n\n    //add the scroll effect with dropdown Navbar\n    useEffect(() => {\n        changeNav()\n        window.addEventListener(\"scroll\", changeNav)\n    }, [])\n\n    return(\n        <>\n            <ul onClick={handleClick} className={click ? 'dropdown-menu clicked' : 'dropdown-menu'}>\n            {EventItems.map((item, index) => {\n                return (\n                    <DropLi active = {scroll} key={index}>\n                        <Link className={item.cName} to={item.path} onClick={() => setClick(false)}>\n                            {item.title}\n                        </Link>\n                    </DropLi>\n                );\n            })}    \n            </ul>\n        </>\n    )\n}\n\nexport default EventsDropDown\n\nconst DropLi = styled.li` \n    transition: ${({active}) => active ? \"0.3s all ease\" : \"0.4s all ease\"};\n    background: ${({active}) => active ? \"#fcfcfc\" : \"linear-gradient(to bottom, rgba(255,255,255,0.9), 0%, rgba(255,255,255,0) 100%)\"};\n    cursor: pointer;\n    border-radius: 0px 0px 5px 5px;\n`","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport {colors} from '../globals/colors'\n\nconst MobileSidebar = ({item}) => {\n    //states to check subNavbar\n\n    const [subnav, setSubnav] = useState(false)\n\n    const showSubnav = () => setSubnav(!subnav)\n\n\n    return (\n    <>\n        <SidebarLink onClick = {item.subNav && showSubnav}>\n            <div>\n            <SidebarLabel to={item.path}>{item.title}</SidebarLabel>\n            </div>\n            <div style={{position: 'relative', left: '4rem'}}>\n                {item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed: null }\n            </div>\n        </SidebarLink>\n        {subnav && item.subNav.map((item, index) => {\n            return (\n                <DropdownLink key={index}>\n                    <SidebarLabel style ={{color: `${colors.darkTeal}`}}to={item.path}>{item.title}</SidebarLabel>\n                </DropdownLink>\n            )\n        })}   \n    </>\n)}\n\n\nexport default MobileSidebar \n\nconst SidebarLink = styled.div`\ndisplay: none;\n\n@media screen and (max-width: 960px) {\n    display: flex; \n    color: ${colors.primaryTeal};\n    font-family: 'Lato', sans-serif;\n    font-weight: 700;\n    justify-content: space-between;\n    align-items: center;\n    padding: 50px;\n    list-style: none;\n    height: 60px;\n    text-decoration: none;\n    font-size: 1.5rem;\n}\n`\n\nconst SidebarLabel = styled(Link)`\n    margin-left: 16px;\n    z-index: 10;\n    text-decoration: none;\n    color: ${colors.primaryTeal};\n\n    &:hover {\n        cursor: pointer;\n        color: ${colors.lightTeal};\n    }\n`\n\nconst DropdownLink = styled.div`\n    background: #fcfcfc;\n    height: 60px;\n    font-family: 'Lato', sans-serif;\n    font-weight: 700;\n    padding-left: 3rem;\n    display: flex;\n    align-items: center;\n    color: ${colors.darkTeal};\n    font-size: 1.5rem;\n\n    &:hover {\n        cursor: pointer;\n        color: ${colors.lightTeal};\n    }\n\n`\n\n","import React from 'react'\nimport * as RiIcons from \"react-icons/ri\"\n\n\nexport const SidebarData = [\n    {\n        title: 'About Us',\n        path: '/aboutUs',\n    },\n    \n    {\n        \n        title: 'Events',\n        path: '/mainEvents',\n        iconClosed: <RiIcons.RiArrowDownSFill/>,\n        iconOpened: <RiIcons.RiArrowUpSFill/>,\n        subNav: [\n            {\n                title: 'PITCH IT', \n                path: '/subEvents/latestEvent',\n            }\n        ],\n    },\n\n    {\n        title: 'Our Team',\n        path: '/ourTeam',\n    },\n\n    {/*\n        title: 'Programs',\n        path: '/programs',\n*/},\n\n    { \n        title: 'Career/Contact',\n        path: '/career',\n\n    }\n\n]\n\nexport default SidebarData\n","import React, {useState, useEffect} from 'react' //state and effect to track state \nimport {FaBars, FaTimes} from \"react-icons/fa\"\nimport {IconContext} from \"react-icons/lib\" //this will change all icons from one given wrapper\nimport {MobileIcon, Nav, NavbarContainer, NavLogo, NavMenu, NavItem, NavLinks} from \"./navBarElements\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport EventsDropDown from './dropdownEvents'\nimport MobileSidebar from './MobileSidebar'\nimport { SidebarData } from './MobileSidebarData'\n\n\n// for reference = () => are arrow functions \nconst Navbar = () => {\n    //click functions for the mobile dropdown\n    const [click, setClick] = useState(false)\n    //scroll effect for the navbar\n    const [scroll, setScroll] = useState(false)\n    //function to toggle the click state\n    const handleClick = () => setClick(!click)\n    \n    //dropdown to toggle the dropdown state\n    const [dropdown, setDropdown] = useState(false)\n   \n    //dropdown hover \n    const onMouseEnter = () => {\n        if (window.innerWidth < 960) {\n            setDropdown(false)\n        }\n        else {\n            setDropdown(true)\n        }\n    }\n    const onMouseLeave = () => {\n        if (window.innerWidth < 960) {\n            setDropdown(false)\n        }\n        else {\n            setDropdown(false)\n        }\n    }\n\n\n    // function to apply the navbar change effect\n    const changeNav = () => {\n        if (window.scrollY >= 80) {\n            setScroll(true)\n        } else {\n            setScroll(false)\n        }\n    }\n\n    //add the scroll effect with navbar \n    useEffect(() => {\n        changeNav()\n        window.addEventListener(\"scroll\", changeNav)\n    }, [])\n\n    return (\n            <IconContext.Provider value = {{color: '#008CA0'}}>\n                <Nav active ={scroll} click={click}>\n\n                    <NavbarContainer>\n                        <NavLogo to =\"/\">\n                        <StaticImage\n                                    src= '../../images/marketyze_logo.png'\n                                    loading=\"eager\"\n                                    width={55}\n                                    quality={95}\n                                    formats={[\"auto\", \"webp\", \"avif\"]}\n                                    alt=\"\"\n                                    placeholder=\"transparent\"\n                                    style={{ marginRight: `0.5rem` }}\n                                />\n                             MARKETYZE\n                        </NavLogo>\n\n                        <MobileIcon onClick = {handleClick}>\n                            {click ? <FaTimes/> : <FaBars/>}\n                        </MobileIcon>\n                        \n                        <NavMenu click={click}>\n                        \n                            <NavItem>\n                                <NavLinks to=\"/aboutUs\">About Us</NavLinks>\n                            </NavItem>\n                            \n                            \n                            <NavItem onMouseEnter = {onMouseEnter} onMouseLeave = {onMouseLeave}>\n                                <NavLinks to=\"/mainEvents\">Events</NavLinks>\n                                {dropdown && <EventsDropDown/>}\n                            </NavItem>\n                            \n                            \n                            <NavItem>\n                                <NavLinks to=\"/ourTeam\">Our Team</NavLinks>\n                            </NavItem>\n                            \n\n                            {/*\n                            <NavItem>\n                                <NavLinks to=\"/programs\">Programs</NavLinks>\n                            </NavItem>\n                            */}\n                            \n                            \n                            <NavItem>\n                                <NavLinks to=\"/career\">Career/Contact</NavLinks>\n                            </NavItem>\n                            {SidebarData.map((item, index) => {\n                                return <MobileSidebar item={item} key={index} />\n                            })}\n                        </NavMenu>\n\n                    </NavbarContainer>\n\n\n                </Nav>\n            </IconContext.Provider>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport styled from 'styled-components'\nimport {Link} from 'gatsby'\nimport {colors} from '../globals/colors.js'\nimport {StaticImage} from 'gatsby-plugin-image'\nimport {FaFacebook, FaInstagram, FaLinkedin} from 'react-icons/fa'\n\nconst Footer = () => {\n    return(\n        <FooterContainer>\n            <FooterWrap>\n                <FooterLinksContainer>\n                    <FooterLinksWrapper>\n\n                        <FooterLinkItems>\n                            <FooterLinkTitle>General</FooterLinkTitle>\n                            <FooterLink to='/aboutUs'>About Us</FooterLink>\n                            {/*<FooterLink to='/'>Our Team</FooterLink>*/}\n                        </FooterLinkItems>\n\n                        <FooterLinkItems>\n                            <FooterLinkTitle>Events</FooterLinkTitle>\n                            <FooterLink to='/mainEvents'>Overview</FooterLink>\n                            <FooterLink to='/subEvents/latestEvent'>PITCH IT</FooterLink>\n                        </FooterLinkItems>\n\n                        <FooterLinkItems>\n                            <FooterLinkTitle>More</FooterLinkTitle>\n                            <FooterLink to='/programs'>Programs</FooterLink>\n                            <FooterLink to='/career'>Career/Contact</FooterLink>\n                        </FooterLinkItems>\n\n                    </FooterLinksWrapper>\n                </FooterLinksContainer>\n\n                <SocialMedia>\n                    <SocialMediaWrap>\n                        <SocialLogo to='/'>\n                            <StaticImage\n                                    src= '../../images/white_logo.png'\n                                    loading=\"eager\"\n                                    width={65}\n                                    quality={100}\n                                    formats={[\"auto\", \"webp\", \"avif\"]}\n                                    alt=\"\"\n                                    placeholder=\"transparent\"\n                                    style={{ marginRight: `0.5rem` }}\n                                />\n                             MARKETYZE\n                        </SocialLogo>\n                        <WebsiteRights>Marketyze © {new Date().getFullYear()} All rights reserved.</WebsiteRights>\n                        \n                        <SocialIcons>\n                            <SocialIconLink href='https://www.facebook.com/marketyzeca/' target='_blank' aria-label='Facebook'><FaFacebook/></SocialIconLink>\n\n                            <SocialIconLink href='https://www.instagram.com/marketyze.ca/?hl=en' target='_blank' aria-label='Instagram'><FaInstagram/></SocialIconLink>\n\n                            <SocialIconLink href='https://ca.linkedin.com/company/marketyzeca' target='_blank' aria-label='Linkedin'><FaLinkedin/></SocialIconLink>\n                        </SocialIcons>\n                    \n                    </SocialMediaWrap>\n                </SocialMedia>\n\n            </FooterWrap>\n        </FooterContainer>\n    )\n\n\n}\n\nexport default Footer\n\n//general footer\nconst FooterContainer = styled.div`\n    font-family: 'Lato', sans-serif;\n    background-color: ${colors.darkTeal};\n`\n\nconst FooterWrap = styled.div`\n    padding: 48px 24px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    max-width: 1100px;\n    margin: 0 auto;\n`\n\nconst FooterLinksContainer = styled.div`\n    display: flex;\n    justify-content: center;\n\n    @media screen and (max-width: 820px) {\n        padding-top: 32px;\n        position: relative;\n        left: 2rem;\n    }\n\n    @media screen and (max-width: 480px) {\n        left 0.5rem;\n    }\n`\n\nconst FooterLinksWrapper = styled.div`\n    display: flex;\n\n    @media screen and (max-width: 820px) {\n        flex-direction: column;\n    }\n`\n\nconst FooterLinkItems = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    margin: 16px;\n    text-align: left;\n    width: 160px;\n    box-sizing: border-box;\n    color: #fff;\n\n    @media screen and (max-width: 420px) {\n        margin: 0;\n        padding: 10px;\n        width: 100%;\n    }\n`\nconst FooterLinkTitle = styled.h1`\n    font-size: 14px;\n    margin-bottom: 16px;\n`\n\nconst FooterLink = styled(Link)`\n    color: #fff;\n    text-decoration: none;\n    margin-bottom: 0.5rem;\n    font-size: 14px;\n\n    &:hover {\n        color: ${colors.lightTeal};\n        transition: 0.3s ease-out;\n    }\n`\n//social media footer\n\nconst SocialMedia = styled.section`\n    max-width: 1000px;\n    width: 100%;\n`\n\nconst SocialMediaWrap = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    max-width: 1100px;\n    margin: 40px auto 0 auto;\n\n    @media screen and (max-width: 820px) {\n        flex-direction: column;\n    }\n`\n\nconst SocialLogo = styled(Link)`\n    color: #fff;\n    justify-self: start;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 1.5rem;\n    display: flex;\n    align-items: center;\n    margin-bottom: 16px;\n    font-weight: bold;\n`\n\nconst WebsiteRights = styled.small`\n    color: #fff;\n    margin-bottom: 16px;\n`\n\nconst SocialIcons = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 240px;\n`\n\nconst SocialIconLink = styled.a`\n    color: #fff;\n    font-size: 24px;\n`","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\nimport Navbar from \"./Navbar/navBarIndex\"\nimport Footer from \"./Footer/footerElements\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Navbar />\n        <main>{children}</main>\n      <Footer/>\n    </>\n  )\n}\n\nexport default Layout\n\n\n//metadata stuff? SEO? \n/**\n * \n * <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n */","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function (conf) {\n    var attr = props.attr,\n      size = props.size,\n      title = props.title,\n      svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","j","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","s","width","height","className","style","O","h","loading","shouldLoad","opacity","z","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","P","A","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","q","children","u","H","F","G","srcSet","decoding","V","fallback","sources","sizes","_ref6","media","type","key","B","propTypes","displayName","U","Y","Error","X","J","Z","K","Q","_len","arguments","_key","c","concat","ee","image","te","ae","ie","Set","se","re","ne","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","oe","le","de","__imageData","__error","console","warn","ce","imgClassName","imgStyle","placeholder","he","_len2","_key2","ue","ge","pe","colors","primaryTeal","black","white","darkTeal","lightTeal","grey","main_color","Nav","styled","componentId","_ref","active","_ref2","_ref3","click","_ref4","NavbarContainer","NavLogo","Link","withConfig","NavMenu","NavLinks","NavItem","MobileIcon","EventItems","title","path","cName","setClick","useState","scroll","setScroll","changeNav","window","scrollY","useEffect","React","onClick","handleClick","item","index","DropLi","to","subnav","setSubnav","SidebarLink","subNav","showSubnav","SidebarLabel","iconOpened","iconClosed","DropdownLink","color","SidebarData","RiIcons","Navbar","dropdown","setDropdown","IconContext","value","StaticImage","quality","formats","marginRight","require","FaTimes","FaBars","onMouseEnter","innerWidth","onMouseLeave","EventsDropDown","MobileSidebar","Footer","FooterContainer","FooterWrap","FooterLinksContainer","FooterLinksWrapper","FooterLinkItems","FooterLinkTitle","FooterLink","SocialMedia","SocialMediaWrap","SocialLogo","WebsiteRights","Date","getFullYear","SocialIcons","SocialIconLink","href","target","FaFacebook","FaInstagram","FaLinkedin","useStaticQuery","_site$siteMetadata","_site$siteMetadata2","description","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","DefaultContext","undefined","size","attr","__assign","Object","assign","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","node","tag","child","GenIcon","data","props","IconBase","elem","conf","svgProps","computedSize","stroke","fill","strokeWidth","xmlns","Consumer"],"sourceRoot":""}